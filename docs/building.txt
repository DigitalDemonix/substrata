
Building Chromium Embedded Framework (CEF)
==========================================

We want to build CEF ourselves so we can compile in proprietary_codecs (in particular h264 support) 

Building CEF from source
------------------------
Following https://bitbucket.org/chromiumembedded/cef/wiki/AutomatedBuildSetup roughly:

In cmd.exe shell:

set GN_DEFINES=is_official_build=true proprietary_codecs=true ffmpeg_branding=Chrome use_thin_lto=false
set GYP_MSVS_VERSION=2019
set CEF_ARCHIVE_FORMAT=tar.bz2
C:\programming>python automate-git.py --download-dir=c:/cef --branch=4951 --minimal-distrib --client-distrib --force-clean --x64-build 

Note that GYP_MSVS_VERSION=2022 doesn't work (brotli compile/link errors)

Branch 4951 is march 2022, see https://bitbucket.org/chromiumembedded/cef/wiki/BranchesAndBuilding.md



To build binary distribution
----------------------------
cd C:\cef\chromium\src\cef\tools
make_distrib.bat --ninja-build --x64-build

Builds to something like:
C:\cef\chromium\src\cef\binary_distrib\cef_binary_101.0.3+g68a0a11+chromium-101.0.4951.26_windows64\




Rebuild libcef C++ dll wrapper
------------------------------
Change into the binary distribution directory we just built:

cd C:\cef\chromium\src\cef\binary_distrib\cef_binary_101.0.3+g68a0a11+chromium-101.0.4951.26_windows64
mkdir libcef_dll_build
cd libcef_dll_build
cmake ../
# Open in Visual Studio:
&"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\devenv.exe" cef.sln

For libcef_dll_wrapper project:
Debug config:
remove _HAS_ITERATOR_DEBUGGING=0 from libcef_dll_wrapper c++ preprocess defs
Change debug C++ code generation  / Runtime Library to "Multi-threaded Debug DLL (/MDd)"

Release config:
Change debug C++ code generation  / Runtime Library to "Multi-threaded DLL (/MD)"






CEF on Mac
===========
To allow the pre-built spotify binaries to be loaded:
cd /Users/nick/programming/cyberspace_output/test_builds
xattr -d com.apple.quarantine Chromium\ Embedded\ Framework.framework/Chromium\ Embedded\ Framework



https://developer.apple.com/documentation/security/disabling_and_enabling_system_integrity_protection



cd /Users/nick/programming/cef_binary_100.0.24+g0783cf8+chromium-100.0.4896.127_macosx64/libcef_dll_build/tests/cefclient/Release
codesign --options runtime --deep --force --verify --verbose --sign "Developer ID Application: Glare Technologies UK Limited" "cefclient Helper.app"


codesign --options runtime --deep --force --verify --verbose --sign "Developer ID Application: Glare Technologies UK Limited" "/Users/nick/programming/cyberspace_output/test_builds/gui_client.app/Contents/Frameworks/Chromium Embedded Framework.framework"



CEF on Linux
============
sudo apt-get install gperf

cd /home/nick/cef
export GN_DEFINES="is_official_build=true use_sysroot=true use_allocator=none symbol_level=1 is_cfi=false use_thin_lto=false proprietary_codecs=true ffmpeg_branding=Chrome"
export CEF_ARCHIVE_FORMAT=tar.bz2
python3 automate-git.py --download-dir=/home/nick/cef --branch=4951 --minimal-distrib --client-distrib --force-clean --build-target=cefsimple --x64-build


# Change dir into the just-build binary distribution dir (path may differ), and build libcef_dll wrapper:
cd ~/cef/chromium/src/cef/binary_distrib/cef_binary_101.0.18+g367b4a0+chromium-101.0.4951.67_linux64
mkdir libcef_dll_build && cd libcef_dll_build
cmake ../
make libcef_dll_wrapper -j 12









Building LLVM
===================
from indigo trunk scripts dir:
ruby .\build_llvm.rb --vsversion 2015 --release 6.0.0 --config Release
ruby .\build_llvm.rb --vsversion 2015 --release 6.0.0 --config Debug

rename dir to llvm_6_0_0_install_vs2015_64
